version: "3.7"
services:
  redis:
    image: redis:6-alpine
    command: >
      --appendonly yes
      --requirepass ${REDIS_PWD}
    networks:
      - net
    volumes:
      - db:/data
    deploy:
      restart_policy:
        condition: on-failure

  app:
    image: ${REGISTRY}/${IMAGE}:${VERSION}
    command: >
      /bin/ash -c "
        bin/helper/wait ${REDIS_HOST}:${REDIS_PORT};
        node server
      "
    environment:
      DEBUG_HIDE_DATE: ${DEBUG_HIDE_DATE}
      DEBUG_COLORS: ${DEBUG_COLORS}
      DEBUG_PREFIX: ${DEBUG_PREFIX}
      DEBUG: ${DEBUG}
      NODE_ENV: ${NODE_ENV}
      APP_ENV: ${APP_ENV}
      APP_NS: ${APP_NS}
      PORT: ${PORT}
      PORT_PUBLISHED: ${PORT_PUBLISHED}
      VERSION: ${VERSION}
      #
      CACHE_REDIS_NAMESPACE: ${CACHE_REDIS_NAMESPACE}
      CACHE_REDIS_DB: ${CACHE_REDIS_DB}
      CLEAR_CACHE_FIRST_RUN: ${CLEAR_CACHE_FIRST_RUN}
      #
      REDIS: ${REDIS}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_PWD: ${REDIS_PWD}
    ports:
      - ${PORT_PUBLISHED}:${PORT}
    networks:
      - net
    deploy:
      resources:
        limits:
          cpus: ${DEPLOY_RESOURCES_LIMITS_CPUS}
          memory: ${DEPLOY_RESOURCES_LIMITS_MEMORY}
      restart_policy:
        condition: on-failure

networks:
  net:
    name: ${NETWORK_NAME}

volumes:
  db:
    name: ${VOL_NAME}_db
