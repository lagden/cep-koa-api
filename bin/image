#!/bin/bash

DIR="$( cd -P "$( dirname "$0" )" && pwd )"

# Import functions
. $DIR/_fn

usage() {
	cat <<-EOF

  Usage: $0 [-e <production|staging>]

  Options:
    -e   Environment
    -h   Show usage

EOF
exit 0
}

# Go to project root
cd $DIR
cd ..

CURR_FOLDER=`pwd`
OPT="staging"

while getopts ":e:" o
do
	case ${o} in
		e) [ $OPTARG = "staging" -o $OPTARG = "production" ] && OPT=$OPTARG || usage ;;
		*) usage ;;
	esac
done

# ENV File
ENVFILE="${CURR_FOLDER}/.env-${OPT}"
if test ! -e $ENVFILE; then
	abort "Environment file not found"
fi

set -a
source $ENVFILE

## Variables
REGISTRY_HOST="${REGISTRY}"
REGISTRY_USER=`cat ${CURR_FOLDER}/.registry-user`
REGISTRY_PASSWD=`cat ${CURR_FOLDER}/.registry-passwd`
TAG_IMAGE="${REGISTRY_HOST}/${IMAGE}:${VERSION}"

## Build
docker build \
	--build-arg PORT=${PORT} \
	--build-arg NODE_ENV=${NODE_ENV} \
	--build-arg VERSION=${VERSION} \
	--compress --force-rm --no-cache . --tag $TAG_IMAGE
test $? -ne 0 && abort "Build fail" || ok "Build complete"

## Push (Send Docker image to Registry)
docker login -u $REGISTRY_USER -p $REGISTRY_PASSWD $REGISTRY_HOST
docker push $TAG_IMAGE

docker rmi $(docker images -q -f "dangling=true" -f "label=autodelete=true")

ok "Build accomplished"

exit 0
