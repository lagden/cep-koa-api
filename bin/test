#!/bin/bash

DIR="$( cd -P "$( dirname "$0" )" && pwd )"
cd $DIR
cd ..

CURR_FOLDER=`pwd`
BUILD=""
SERVICE="cep"
OPT="test"
COMPOSE_TEMPLATE="${CURR_FOLDER}/docker-compose.template.yml"
COMPOSE_LOCAL="${CURR_FOLDER}/docker-compose.local.yml"
COMPOSE_TEST="${CURR_FOLDER}/docker-compose.devtest.yml"

abort() {
	printf "\n  \033[31mError: $@\033[0m\n\n" && exit 1
}

ok() {
	printf "\n  \033[32mOk: $@\033[0m\n\n"
}

usage() {
	cat <<-EOF

  Usage: $0 [-b] [-s <service>]

  Options:
    -b   Build image
    -s   Docker compose service name
    -h   Show usage

EOF
exit 0
}

_cleanup() {
	docker-compose \
		-f $COMPOSE_TEMPLATE \
		-f $COMPOSE_LOCAL \
		-f $COMPOSE_TEST \
		down \
		--volumes \
		--remove-orphans > /dev/null 2>&1
}

trap '_cleanup; abort "Tests failed for unexpected reasons"' HUP INT QUIT PIPE TERM SIGINT SIGTERM

while getopts ":bs:" o
do
	case ${o} in
		b) BUILD="--build" ;;
		s) SERVICE=$OPTARG ;;
		*) usage ;;
	esac
done

# ENV File
ENVFILE="${CURR_FOLDER}/.env-${OPT}"
if test ! -e $ENVFILE; then
	abort "Environment file not found"
fi

set -a
source $ENVFILE

docker-compose \
	-f $COMPOSE_TEMPLATE \
	-f $COMPOSE_LOCAL \
	-f $COMPOSE_TEST \
	up \
	--force-recreate \
	--always-recreate-deps \
	--abort-on-container-exit \
	--exit-code-from $SERVICE \
	--remove-orphans \
	$BUILD \
	$SERVICE

if test $? -ne 0; then
	_cleanup
	abort "Test FAIL"
fi

_cleanup
ok "Test PASS"

exit 0
