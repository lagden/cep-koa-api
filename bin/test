#!/bin/bash

DIR="$( cd -P "$( dirname "$0" )" && pwd )"
cd $DIR
cd ..

RED='\033[0;31m'
GREEN='\033[0;32m'
NC='\033[0m'

NAMESPACE='cepkoa'
REBUILD=0

_cleanup() {
	docker-compose down --volumes > /dev/null 2>&1
	docker stop $(docker ps --all --quiet) > /dev/null 2>&1
	docker rm $(docker ps --all --quiet --filter="status=exited") > /dev/null 2>&1
	docker rmi $(docker images -f "dangling=true" -q) > /dev/null 2>&1
}

_up() {
	docker-compose -p $NAMESPACE up $1 -d dev redis
}

args=()
options='b'
while getopts $options option
do
	case $option in
		b) REBUILD=1;;
		\?) echo "Unknown option: -$OPTARG" >&2; exit 1;;
		:) echo "Missing option argument for -$OPTARG" >&2; exit 1;;
		*) echo "Unimplemented option: -$OPTARG" >&2; exit 1;;
	esac
done

trap '_cleanup; printf "${RED}Tests Failed For Unexpected Reasons${NC}\n"; exit 1' HUP INT QUIT PIPE TERM SIGINT SIGTERM

test $REBUILD == 1 && _up '--build' || _up
if test $? -ne 0; then
	printf "${RED}Docker Compose Failed${NC}\n"
	exit -1
fi

docker-compose -p ${NAMESPACE} up test
TEST_EXIT_CODE=`docker inspect ${NAMESPACE}_test_1 --format='{{.State.ExitCode}}'`

if test $TEST_EXIT_CODE -ne 0; then
	printf "${RED}Test FAIL${NC}\n"
else
	printf "${GREEN}Test OK${NC}\n"
fi

_cleanup

exit $TEST_EXIT_CODE
